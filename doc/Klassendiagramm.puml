@startuml
skinparam classAttributeIconSize 0

SupertetrisApp ..> StartViewController
StartViewController ..> BoardViewController
StartViewController ..> LobbyViewController
BoardViewController "1" *--* "1" GameController
GameController "1" *-- "1" Board
GameController "1" *-- "1" Stopwatch
GameController "1" *-- "1" Scores
BoardListener <-- Board
Board "1" *-- "*" Stone
GameController <-- MultiGameController
BoardViewController ..> GameoverViewController
MultiBoardViewController ..> GameoverViewController
MultiBoardViewController *-- MultiGameController
MultiGameController *-- OpponentBoard
MultiplayerGame ..> MultiBoardViewController

ViewController <-- StartViewController
ViewController <-- BoardViewController
ViewController <-- MultiBoardViewController
ViewController <-- LobbyViewController
ViewController <-- GameoverViewController

ViewController *-- GameServer
ViewController *-- PlayerClient
ViewController *-- ClientInterface
ViewController *--* MultiplayerGame

ClientInterface *-- PlayerClient
ClientInterface o-- Actions
GameServer o-- Actions
PlayerClient o-- Actions

GameServer *-- PlayerOnServer

Stone +-- StoneType

class SupertetrisApp {
    main()
}

abstract class ViewController {
}

abstract class BoardListener {
    onGameover()
    onRowDeleted(int count)
    onRowAdded()
    onNext(Stone stone)
    onDropped()
    onMove()
    onRotate()
    onSpawn(Stone stone)
}

class StartViewController {
}

class BoardViewController {
    gameController : GameController
}

class MultiBoardViewController {
}

class GameController {
    board : Board
    start()
    stop()
}

class OpponentBoard {
}

class ClientInterface {
}

interface Actions {
}

class Board {
    currentStone : Stone
    nextStone : Stone
    matrix : int[][]
    downTimer : Timeline
}

class Stone {
    matrix : int[][]
    stoneType : StoneType
}

class StoneType {
    color : Color
    matrix : int[][]
}

class Scores {
    level : int
    points : int
    lineCount : int
}

@enduml